- name: Extract GitHub repo path components
  set_fact:
    _github_url_components: "{{ ansible_pull_repo | regex_findall(ansible_pull_ssh_github_parse_pattern) | first | list }}"
  delegate_to: localhost
  tags:
    - ansible_pull
    - ansible_pull_ssh
    - ansible_pull_ssh_github

- name: Get GitHub API URL
  set_fact:
    _github_keys_api_url: https://api.github.com/repos/{{ _github_url_components[0] }}/{{ _github_url_components[1] }}/keys
  delegate_to: localhost
  tags:
    - ansible_pull
    - ansible_pull_ssh
    - ansible_pull_ssh_github

- name: Retrieve list of existing deploy keys
  uri:
    url: "{{ _github_keys_api_url }}"
    method: GET
    headers:
      Accept: "application/vnd.github+json"
      Authorization: "Bearer {{ ansible_pull_ssh_github_token }}"
      X-GitHub-Api-Version: "2022-11-28"
    return_content: yes
    validate_certs: no
  register: _existing_deploy_keys
  delegate_to: localhost
  tags:
    - ansible_pull
    - ansible_pull_ssh
    - ansible_pull_ssh_github

- name: Test whether SSH public key is present in the list of existing deploy keys
  set_fact:
    _deploy_key_exists: "{{ _existing_deploy_keys.content | from_json | selectattr('key', '==', _ssh_key_generation.public_key | regex_search('^[^=]+=') ) | list | length > 0 }}"
  delegate_to: localhost
  tags:
    - ansible_pull
    - ansible_pull_ssh
    - ansible_pull_ssh_github

- name: Upload SSH public key to GitHub repository
  uri:
    url: "{{ _github_keys_api_url }}"
    method: POST
    headers:
      Accept: "application/vnd.github+json"
      Authorization: "Bearer {{ ansible_pull_ssh_github_token }}"
      X-GitHub-Api-Version: "2022-11-28"
    body_format: json
    body: '{"title": "{{ ansible_hostname }}", "key": "{{ _ssh_key_generation.public_key }}", "read_only": true}'
    status_code: 201
  register: _ssh_key_upload
  changed_when: _ssh_key_upload.status == 201
  when: not _deploy_key_exists
  delegate_to: localhost
  tags:
    - ansible_pull
    - ansible_pull_ssh
    - ansible_pull_ssh_github
